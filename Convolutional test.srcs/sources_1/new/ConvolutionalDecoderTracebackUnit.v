// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\commrshdl\ConvolutionalDecoderTracebackUnit.v
// Created: 2024-04-11 04:03:31
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: ConvolutionalDecoderTracebackUnit
// Source Path: 
// Hierarchy Level: 2
// Model version: 9.74
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module ConvolutionalDecoderTracebackUnit
          (clk,
           reset_x,
           enb,
           varargout_1_0,
           varargout_1_1,
           varargout_1_2,
           varargout_1_3,
           varargout_1_4,
           varargout_1_5,
           varargout_1_6,
           varargout_1_7,
           varargout_1_8,
           varargout_1_9,
           varargout_1_10,
           varargout_1_11,
           varargout_1_12,
           varargout_1_13,
           varargout_1_14,
           varargout_1_15,
           varargout_1_16,
           varargout_1_17,
           varargout_1_18,
           varargout_1_19,
           varargout_1_20,
           varargout_1_21,
           varargout_1_22,
           varargout_1_23,
           varargout_1_24,
           varargout_1_25,
           varargout_1_26,
           varargout_1_27,
           varargout_1_28,
           varargout_1_29,
           varargout_1_30,
           varargout_1_31,
           varargout_1_32,
           varargout_1_33,
           varargout_1_34,
           varargout_1_35,
           varargout_1_36,
           varargout_1_37,
           varargout_1_38,
           varargout_1_39,
           varargout_1_40,
           varargout_1_41,
           varargout_1_42,
           varargout_1_43,
           varargout_1_44,
           varargout_1_45,
           varargout_1_46,
           varargout_1_47,
           varargout_1_48,
           varargout_1_49,
           varargout_1_50,
           varargout_1_51,
           varargout_1_52,
           varargout_1_53,
           varargout_1_54,
           varargout_1_55,
           varargout_1_56,
           varargout_1_57,
           varargout_1_58,
           varargout_1_59,
           varargout_1_60,
           varargout_1_61,
           varargout_1_62,
           varargout_1_63,
           varargout_2,
           varargout_3,
           varargout_4,
           varargout_5,
           varargout_6,
           extEndMsgDelayed,
           varargout_1,
           varargout_2_1,
           varargout_3_1,
           varargout_4_1);


  input   clk;
  input   reset_x;
  input   enb;
  input   varargout_1_0;  // boolean
  input   varargout_1_1;  // boolean
  input   varargout_1_2;  // boolean
  input   varargout_1_3;  // boolean
  input   varargout_1_4;  // boolean
  input   varargout_1_5;  // boolean
  input   varargout_1_6;  // boolean
  input   varargout_1_7;  // boolean
  input   varargout_1_8;  // boolean
  input   varargout_1_9;  // boolean
  input   varargout_1_10;  // boolean
  input   varargout_1_11;  // boolean
  input   varargout_1_12;  // boolean
  input   varargout_1_13;  // boolean
  input   varargout_1_14;  // boolean
  input   varargout_1_15;  // boolean
  input   varargout_1_16;  // boolean
  input   varargout_1_17;  // boolean
  input   varargout_1_18;  // boolean
  input   varargout_1_19;  // boolean
  input   varargout_1_20;  // boolean
  input   varargout_1_21;  // boolean
  input   varargout_1_22;  // boolean
  input   varargout_1_23;  // boolean
  input   varargout_1_24;  // boolean
  input   varargout_1_25;  // boolean
  input   varargout_1_26;  // boolean
  input   varargout_1_27;  // boolean
  input   varargout_1_28;  // boolean
  input   varargout_1_29;  // boolean
  input   varargout_1_30;  // boolean
  input   varargout_1_31;  // boolean
  input   varargout_1_32;  // boolean
  input   varargout_1_33;  // boolean
  input   varargout_1_34;  // boolean
  input   varargout_1_35;  // boolean
  input   varargout_1_36;  // boolean
  input   varargout_1_37;  // boolean
  input   varargout_1_38;  // boolean
  input   varargout_1_39;  // boolean
  input   varargout_1_40;  // boolean
  input   varargout_1_41;  // boolean
  input   varargout_1_42;  // boolean
  input   varargout_1_43;  // boolean
  input   varargout_1_44;  // boolean
  input   varargout_1_45;  // boolean
  input   varargout_1_46;  // boolean
  input   varargout_1_47;  // boolean
  input   varargout_1_48;  // boolean
  input   varargout_1_49;  // boolean
  input   varargout_1_50;  // boolean
  input   varargout_1_51;  // boolean
  input   varargout_1_52;  // boolean
  input   varargout_1_53;  // boolean
  input   varargout_1_54;  // boolean
  input   varargout_1_55;  // boolean
  input   varargout_1_56;  // boolean
  input   varargout_1_57;  // boolean
  input   varargout_1_58;  // boolean
  input   varargout_1_59;  // boolean
  input   varargout_1_60;  // boolean
  input   varargout_1_61;  // boolean
  input   varargout_1_62;  // boolean
  input   varargout_1_63;  // boolean
  input   varargout_2;
  input   varargout_3;
  input   varargout_4;
  input   [5:0] varargout_5;  // ufix6
  input   varargout_6;
  input   extEndMsgDelayed;
  output  varargout_1;
  output  varargout_2_1;
  output  varargout_3_1;
  output  varargout_4_1;


  wire tmp;
  wire tmp_1;
  wire [10:0] trelDecNext_count;  // ufix11
  reg  obj_tracebackUnit_trelDec_validInReg;
  reg  obj_tracebackUnit_trelDec_endExtInReg;
  wire [10:0] trelDecNext_count_1;  // ufix11
  wire [2:0] trelDecNext_state;  // ufix3
  wire [2:0] trelDecNext_state_1;  // ufix3
  wire [2:0] trelDecNext_state_2;  // ufix3
  wire [2:0] trelDecNext_state_3;  // ufix3
  wire [2:0] tmp_2;  // ufix3
  wire [2:0] trelDecNext_state_4;  // ufix3
  wire [2:0] trelDecNext_state_5;  // ufix3
  wire [2:0] tmp_3;  // ufix3
  wire [2:0] trelDecNext_state_6;  // ufix3
  reg [2:0] obj_tracebackUnit_trelDec_state;  // ufix3
  wire [2:0] tmp_4;  // ufix3
  reg [10:0] obj_tracebackUnit_trelDec_count;  // ufix11
  wire [10:0] tmp_5;  // ufix11
  wire [10:0] tmp_6;  // ufix11
  wire [10:0] tmp_7;  // ufix11
  wire [10:0] tmp_8;  // ufix11
  wire [10:0] tmp_9;  // ufix11
  wire [10:0] tmp_10;  // ufix11
  wire [10:0] tmp_11;  // ufix11
  wire tmp_12;
  wire [10:0] tmp_13;  // ufix11
  reg [10:0] tmp_14;  // ufix11
  wire [10:0] tmp_15;  // ufix11
  wire tmp_16;
  wire [2:0] tmp_17;  // ufix3
  reg [2:0] tmp_18;  // ufix3
  wire [2:0] tmp_19;  // ufix3
  reg [2:0] obj_tracebackUnit_trelDec_stateReg;  // ufix3
  wire tmp_20;
  reg  obj_tracebackUnit_trelDec_tracingBack;
  wire [63:0] ramDataIn;  // ufix64
  wire [63:0] x;  // boolean [64]
  wire [63:0] trelDecNext_decisionsReg;  // boolean [64]
  wire [63:0] varargout_1_64;  // boolean [64]
  wire [63:0] trelDecNext_decisionsReg_1;  // boolean [64]
  reg  [63:0] obj_tracebackUnit_trelDec_decisionsReg;  // boolean [64]
  wire [63:0] obj_tracebackUnit_trelDec_decisionsReg_1;  // boolean [64]
  wire [63:0] x_1;  // boolean [64]
  reg [63:0] ramDataIn_1;  // ufix64
  wire wrEn;
  wire [63:0] tmp_21;  // ufix64
  reg [63:0] obj_tracebackUnit_trelDec_RAMOutReg;  // ufix64
  reg [5:0] obj_tracebackUnit_trelDec_winningState;  // ufix6
  wire [5:0] tmp_22;  // ufix6
  wire [7:0] p240tmp_bit_idx;  // uint8
  wire [6:0] p240tmp_add_temp;  // ufix7
  wire signed [31:0] p240tmp_sub_temp;  // int32
  wire [6:0] p240tmp_1;  // ufix7
  wire signed [31:0] p240tmp_2;  // int32
  wire [5:0] tmp_23;  // ufix6
  wire [5:0] tmp_24;  // ufix6
  wire tmp_25;  // ufix1
  reg  obj_tracebackUnit_msgBuf_RAMDataIn;  // ufix1
  wire [10:0] trelDecNext_countReg [0:1];  // ufix11 [2]
  reg [10:0] obj_tracebackUnit_trelDec_countReg [0:1];  // ufix11 [2]
  wire [10:0] trelDecNext_countReg_1 [0:1];  // ufix11 [2]
  wire [10:0] trelDecNext_countReg_2 [0:1];  // ufix11 [2]
  wire [10:0] obj_tracebackUnit_trelDec_countReg_1 [0:1];  // ufix11 [2]
  wire [10:0] tracebackCountOut;  // ufix11
  wire [9:0] tmp_26;  // ufix10
  wire tmp_27;
  wire tmp_28;
  reg  obj_tracebackUnit_trelDec_trellisEnd;
  wire [10:0] tmp_29;  // ufix11
  reg [10:0] obj_tracebackUnit_msgBuf_tbTrainingStartAddr;  // ufix11
  wire [10:0] tmp_30;  // ufix11
  wire tmp_31;
  wire guard1;
  wire guard1_1;
  wire guard1_2;
  wire tmp_32;
  wire tmp_33;
  wire tmp_34;
  wire tmp_35;
  wire tmp_36;
  wire tmp_37;
  wire msgLocNext_counting;
  wire tmp_38;
  wire [10:0] msgLocNext_inputCount;  // ufix11
  wire tmp_39;
  wire msgLocNext_startMsg;
  reg  obj_tracebackUnit_msgLoc_startMsg;
  wire tmp_40;
  wire tmp_41;
  wire [10:0] msgLocNext_inputCount_1;  // ufix11
  wire [10:0] msgLocNext_inputCount_2;  // ufix11
  wire msgLocNext_counting_1;
  wire msgLocNext_counting_2;
  wire msgLocNext_counting_3;
  reg [10:0] obj_tracebackUnit_msgLoc_inputCount;  // ufix11
  wire [10:0] tmp_42;  // ufix11
  wire tmp_43;
  wire [10:0] tmp_44;  // ufix11
  reg  obj_tracebackUnit_msgLoc_counting;
  wire [10:0] tmp_45;  // ufix11
  wire [10:0] tmp_46;  // ufix11
  wire [10:0] tmp_47;  // ufix11
  wire tmp_48;
  wire tmp_49;
  wire tmp_50;
  wire tmp_51;
  wire tmp_52;
  wire tmp_53;
  wire [10:0] msgLocNext_msgStartAddr;  // ufix11
  wire [10:0] tmp_54;  // ufix11
  wire [10:0] msgLocNext_msgStartAddr_1;  // ufix11
  reg [10:0] obj_tracebackUnit_msgLoc_msgStartAddr;  // ufix11
  wire [10:0] tmp_55;  // ufix11
  wire [10:0] tmp_56;  // ufix11
  wire [10:0] tmp_57;  // ufix11
  wire tmp_58;
  wire tmp_59;
  wire tmp_60;
  wire msgLocNext_msgLengthAquired;
  wire msgLocNext_msgLengthAquired_1;
  wire msgLocNext_msgLengthAquired_2;
  wire tmp_61;
  wire msgLocNext_msgLengthAquired_3;
  reg  obj_tracebackUnit_msgLoc_msgLengthAquired;
  wire tmp_62;
  wire tmp_63;
  wire tmp_64;
  wire tmp_65;
  wire tmp_66;
  wire tmp_67;
  wire [10:0] msgLocNext_msgLengthMinus1;  // ufix11
  wire [10:0] tmp_68;  // ufix11
  wire [10:0] msgLocNext_msgLengthMinus1_1;  // ufix11
  reg [10:0] obj_tracebackUnit_msgLoc_msgLengthMinus1;  // ufix11
  wire [10:0] tmp_69;  // ufix11
  wire [10:0] tmp_70;  // ufix11
  wire [10:0] tmp_71;  // ufix11
  wire [10:0] tmp_72;  // ufix11
  wire [10:0] tmp_73;  // ufix11
  wire [11:0] p165tmp_add_temp;  // ufix12
  wire [12:0] p165tmp_sub_temp;  // ufix13
  wire [11:0] p165tmp_1;  // ufix12
  wire [12:0] p165tmp_2;  // ufix13
  wire [12:0] p165tmp_3;  // ufix13
  reg [10:0] obj_tracebackUnit_msgBuf_sliceB_offset;  // ufix11
  wire [10:0] tmp_74;  // ufix11
  wire [9:0] tmp_75;  // ufix10
  wire [11:0] p180tmp_sub_temp;  // ufix12
  wire [11:0] p180tmp_1;  // ufix12
  wire [11:0] p180tmp_2;  // ufix12
  wire [9:0] tmp_76;  // ufix10
  wire [11:0] p172tmp_sub_temp;  // ufix12
  wire [11:0] p172tmp_1;  // ufix12
  wire [11:0] p172tmp_2;  // ufix12
  wire [9:0] tmp_77;  // ufix10
  wire [9:0] tmp_78;  // ufix10
  reg [9:0] obj_tracebackUnit_msgBuf_RAMWrAddr;  // ufix10
  wire [9:0] tmp_79;  // ufix10
  wire [9:0] tmp_80;  // ufix10
  wire [9:0] tmp_81;  // ufix10
  wire [9:0] tmp_82;  // ufix10
  wire msgBufNext_RAMWr;
  wire tmp_83;
  wire tmp_84;
  wire tmp_85;
  wire msgBufNext_RAMWr_1;
  wire msgBufNext_RAMWr_2;
  wire tmp_86;
  wire msgBufNext_RAMWr_3;
  reg  obj_tracebackUnit_msgBuf_RAMWr;
  wire tmp_87;
  wire tmp_88;
  wire tmp_89;
  wire tmp_90;
  wire tmp_91;
  wire out;
  wire out_1;
  wire tmp_92;
  reg  obj_tracebackUnit_trelDec_trellisStart;
  wire tmp_93;
  wire out_2;
  wire out_3;
  wire tmp_94;
  reg  obj_tracebackUnit_msgBuf_lastWrite;
  wire [1:0] tmp_95;  // ufix2
  wire [1:0] msgBufNext_state;  // ufix2
  wire [9:0] tmp_96;  // ufix10
  wire [9:0] msgBufNext_RAMRdAddr;  // ufix10
  reg [9:0] obj_tracebackUnit_msgBuf_RAMRdAddr;  // ufix10
  wire [9:0] tmp_97;  // ufix10
  wire [9:0] tmp_98;  // ufix10
  reg [1:0] obj_tracebackUnit_msgBuf_state;  // ufix2
  reg [1:0] tmp_99;  // ufix2
  wire [1:0] tmp_100;  // ufix2
  wire [1:0] tmp_101;  // ufix2
  reg [9:0] tmp_102;  // ufix10
  wire [9:0] tmp_103;  // ufix10
  wire [9:0] tmp_104;  // ufix10
  wire a;  // ufix1
  wire tmp_105;
  reg  obj_tracebackUnit_dataOut;
  wire [2:0] msgBufNext_RAMCtrlOut;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut_1;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut_2;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut_3;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut_4;  // boolean [3]
  reg  [2:0] tmp_106;  // boolean [3]
  wire [2:0] tmp_107;  // boolean [3]
  wire [2:0] tmp_108;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut_5;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut_6;  // boolean [3]
  wire [2:0] msgBufNext_FSMCtrlOut_7;  // boolean [3]
  wire [2:0] tmp_109;  // boolean [3]
  reg  [2:0] obj_tracebackUnit_msgBuf_FSMCtrlOut;  // boolean [3]
  wire [2:0] obj_tracebackUnit_msgBuf_FSMCtrlOut_1;  // boolean [3]
  wire [2:0] msgBufNext_RAMCtrlOut_1;  // boolean [3]
  reg  [2:0] obj_tracebackUnit_msgBuf_RAMCtrlOut;  // boolean [3]
  wire [2:0] obj_tracebackUnit_msgBuf_RAMCtrlOut_1;  // boolean [3]
  wire tmp_110;
  reg  obj_tracebackUnit_startOut;
  wire tmp_111;
  reg  obj_tracebackUnit_endOut;
  wire tmp_112;
  reg  obj_tracebackUnit_validOut;
  reg [10:0] p218_tmp;  // ufix11
  reg [2:0] p216_tmp;  // ufix3
  reg signed [31:0] p196_k;  // int32
  reg [63:0] p196_tmp;  // ufix64
  reg [63:0] p196_mask;  // ufix64
  reg [63:0] p196_tmp_0;  // ufix64
  reg [7:0] p196_t_0 [0:63];  // uint8 [64]
  reg signed [31:0] obj_tracebackUnit_trelDec_countReg_reg_t_0_0;  // int32
  reg signed [31:0] obj_tracebackUnit_trelDec_countReg_reg_t_1;  // int32
  reg [1:0] p1_tmp;  // ufix2
  reg [1:0] p1_tmp_0;  // ufix2
  reg [1:0] p1_tmp_1;  // ufix2
  reg [11:0] p1_t_0;  // ufix12
  reg [11:0] p1_t_1;  // ufix12
  reg [9:0] p1_tmp1;  // ufix10
  reg [9:0] p1_tmp_01;  // ufix10
  reg [11:0] p1_t_01;  // ufix12
  reg [11:0] p1_t_11;  // ufix12
  reg signed [31:0] p1_t_02;  // int32
  reg signed [31:0] p1_t_12;  // int32
  reg signed [31:0] p1_t_2;  // int32
  reg  [2:0] p1_msgBufNext_FSMCtrlOut;  // boolean [3]
  reg  [2:0] p1_t_3;  // boolean [3]
  reg  [2:0] p1_t_4;  // boolean [3]
  reg  [2:0] p1_t_5;  // boolean [3]
  reg [11:0] p1_t_6;  // ufix12
  reg [11:0] p1_t_7;  // ufix12


  assign tmp = varargout_4 && varargout_2;



  assign tmp_1 = varargout_4 && varargout_2;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp258
  assign trelDecNext_count = 11'b00000000000;



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_validInReg_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_validInReg <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_validInReg <= varargout_4;
        end
      end
    end



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_endExtInReg_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_endExtInReg <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_endExtInReg <= varargout_3;
        end
      end
    end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp205
  assign trelDecNext_count_1 = 11'b00000000000;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp254
  assign trelDecNext_state = 3'b000;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp254
  assign trelDecNext_state_1 = 3'b100;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp249
  assign trelDecNext_state_2 = 3'b010;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp249
  assign trelDecNext_state_3 = 3'b100;



  assign tmp_2 = (varargout_6 == 1'b0 ? trelDecNext_state_2 :
              trelDecNext_state_3);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp241
  assign trelDecNext_state_4 = 3'b001;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp241
  assign trelDecNext_state_5 = 3'b011;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp220
  assign tmp_3 = (obj_tracebackUnit_trelDec_endExtInReg == 1'b0 ? trelDecNext_state_4 :
              trelDecNext_state_5);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp200
  assign trelDecNext_state_6 = 3'b001;



  assign tmp_4 = (obj_tracebackUnit_trelDec_validInReg == 1'b0 ? obj_tracebackUnit_trelDec_state :
              tmp_3);



  assign tmp_5 = obj_tracebackUnit_trelDec_count + 11'b00000000001;



  assign tmp_6 = obj_tracebackUnit_trelDec_count + 11'b00000000001;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp223
  assign tmp_7 = (obj_tracebackUnit_trelDec_endExtInReg == 1'b0 ? tmp_6 :
              tmp_5);



  assign tmp_8 = (obj_tracebackUnit_trelDec_validInReg == 1'b0 ? obj_tracebackUnit_trelDec_count :
              tmp_7);



  assign tmp_9 = obj_tracebackUnit_trelDec_count - 11'b00000000001;



  assign tmp_10 = (varargout_6 == 1'b0 ? obj_tracebackUnit_trelDec_count :
              tmp_9);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp258
  assign tmp_11 = obj_tracebackUnit_trelDec_count - 11'b00000000001;



  assign tmp_12 = obj_tracebackUnit_trelDec_count != 11'b00000000000;



  assign tmp_13 = (tmp_12 == 1'b0 ? trelDecNext_count :
              tmp_11);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp205
  always @(obj_tracebackUnit_trelDec_count, obj_tracebackUnit_trelDec_state, tmp_10,
       tmp_13, tmp_8) begin
    case ( obj_tracebackUnit_trelDec_state)
      3'b001 :
        begin
          p218_tmp = tmp_8;
        end
      3'b011 :
        begin
          p218_tmp = obj_tracebackUnit_trelDec_count;
        end
      3'b010 :
        begin
          p218_tmp = tmp_10;
        end
      3'b100 :
        begin
          p218_tmp = tmp_13;
        end
      default :
        begin
          p218_tmp = 11'b00000000000;
        end
    endcase
    tmp_14 = p218_tmp;
  end



  assign tmp_15 = (tmp_1 == 1'b0 ? tmp_14 :
              trelDecNext_count_1);



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_count_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_count <= 11'b00000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_count <= tmp_15;
        end
      end
    end



  assign tmp_16 = obj_tracebackUnit_trelDec_count != 11'b00000000000;



  assign tmp_17 = (tmp_16 == 1'b0 ? trelDecNext_state :
              trelDecNext_state_1);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp200
  always @(obj_tracebackUnit_trelDec_state, tmp_17, tmp_2, tmp_4) begin
    case ( obj_tracebackUnit_trelDec_state)
      3'b001 :
        begin
          p216_tmp = tmp_4;
        end
      3'b011 :
        begin
          p216_tmp = 3'b010;
        end
      3'b010 :
        begin
          p216_tmp = tmp_2;
        end
      3'b100 :
        begin
          p216_tmp = tmp_17;
        end
      default :
        begin
          p216_tmp = 3'b000;
        end
    endcase
    tmp_18 = p216_tmp;
  end



  assign tmp_19 = (tmp == 1'b0 ? tmp_18 :
              trelDecNext_state_6);



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_state_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_state <= 3'b000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_state <= tmp_19;
        end
      end
    end



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_stateReg_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_stateReg <= 3'b000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_stateReg <= obj_tracebackUnit_trelDec_state;
        end
      end
    end



  assign tmp_20 = obj_tracebackUnit_trelDec_stateReg == 3'b100;



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_tracingBack_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_tracingBack <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_tracingBack <= tmp_20;
        end
      end
    end



  assign ramDataIn = 64'h0000000000000000;



  assign x = {64{1'b0}};



  assign trelDecNext_decisionsReg = {64{1'b0}};



  assign varargout_1_64[0] = varargout_1_0;
  assign varargout_1_64[1] = varargout_1_1;
  assign varargout_1_64[2] = varargout_1_2;
  assign varargout_1_64[3] = varargout_1_3;
  assign varargout_1_64[4] = varargout_1_4;
  assign varargout_1_64[5] = varargout_1_5;
  assign varargout_1_64[6] = varargout_1_6;
  assign varargout_1_64[7] = varargout_1_7;
  assign varargout_1_64[8] = varargout_1_8;
  assign varargout_1_64[9] = varargout_1_9;
  assign varargout_1_64[10] = varargout_1_10;
  assign varargout_1_64[11] = varargout_1_11;
  assign varargout_1_64[12] = varargout_1_12;
  assign varargout_1_64[13] = varargout_1_13;
  assign varargout_1_64[14] = varargout_1_14;
  assign varargout_1_64[15] = varargout_1_15;
  assign varargout_1_64[16] = varargout_1_16;
  assign varargout_1_64[17] = varargout_1_17;
  assign varargout_1_64[18] = varargout_1_18;
  assign varargout_1_64[19] = varargout_1_19;
  assign varargout_1_64[20] = varargout_1_20;
  assign varargout_1_64[21] = varargout_1_21;
  assign varargout_1_64[22] = varargout_1_22;
  assign varargout_1_64[23] = varargout_1_23;
  assign varargout_1_64[24] = varargout_1_24;
  assign varargout_1_64[25] = varargout_1_25;
  assign varargout_1_64[26] = varargout_1_26;
  assign varargout_1_64[27] = varargout_1_27;
  assign varargout_1_64[28] = varargout_1_28;
  assign varargout_1_64[29] = varargout_1_29;
  assign varargout_1_64[30] = varargout_1_30;
  assign varargout_1_64[31] = varargout_1_31;
  assign varargout_1_64[32] = varargout_1_32;
  assign varargout_1_64[33] = varargout_1_33;
  assign varargout_1_64[34] = varargout_1_34;
  assign varargout_1_64[35] = varargout_1_35;
  assign varargout_1_64[36] = varargout_1_36;
  assign varargout_1_64[37] = varargout_1_37;
  assign varargout_1_64[38] = varargout_1_38;
  assign varargout_1_64[39] = varargout_1_39;
  assign varargout_1_64[40] = varargout_1_40;
  assign varargout_1_64[41] = varargout_1_41;
  assign varargout_1_64[42] = varargout_1_42;
  assign varargout_1_64[43] = varargout_1_43;
  assign varargout_1_64[44] = varargout_1_44;
  assign varargout_1_64[45] = varargout_1_45;
  assign varargout_1_64[46] = varargout_1_46;
  assign varargout_1_64[47] = varargout_1_47;
  assign varargout_1_64[48] = varargout_1_48;
  assign varargout_1_64[49] = varargout_1_49;
  assign varargout_1_64[50] = varargout_1_50;
  assign varargout_1_64[51] = varargout_1_51;
  assign varargout_1_64[52] = varargout_1_52;
  assign varargout_1_64[53] = varargout_1_53;
  assign varargout_1_64[54] = varargout_1_54;
  assign varargout_1_64[55] = varargout_1_55;
  assign varargout_1_64[56] = varargout_1_56;
  assign varargout_1_64[57] = varargout_1_57;
  assign varargout_1_64[58] = varargout_1_58;
  assign varargout_1_64[59] = varargout_1_59;
  assign varargout_1_64[60] = varargout_1_60;
  assign varargout_1_64[61] = varargout_1_61;
  assign varargout_1_64[62] = varargout_1_62;
  assign varargout_1_64[63] = varargout_1_63;

  assign trelDecNext_decisionsReg_1 = varargout_1_64;



  assign obj_tracebackUnit_trelDec_decisionsReg_1 = trelDecNext_decisionsReg_1;



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_decisionsReg_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_decisionsReg <= {64{1'b0}};
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_decisionsReg <= obj_tracebackUnit_trelDec_decisionsReg_1;
        end
      end
    end



  assign x_1 = obj_tracebackUnit_trelDec_decisionsReg;



  always @* begin
    p196_mask = 64'h0000000000000000;
    p196_tmp_0 = 64'h0000000000000000;
    p196_tmp = ramDataIn;

    for(p196_k = 32'sd0; p196_k <= 32'sd63; p196_k = p196_k + 32'sd1) begin
      p196_t_0[p196_k] = p196_k[7:0];
      p196_mask = 64'h0000000000000001 <<< p196_t_0[p196_k];
      if (x_1[p196_k]) begin
        p196_tmp_0 = p196_tmp | p196_mask;
      end
      else begin
        p196_tmp_0 = p196_tmp & ( ~ p196_mask);
      end
      p196_tmp = p196_tmp_0;
    end

    ramDataIn_1 = p196_tmp;
  end



  assign wrEn = obj_tracebackUnit_trelDec_state == 3'b001;



  SinglePortRAM_generic_block #(.AddrWidth(11),
                                .DataWidth(64)
                                )
                              u_singlePortRam_generic (.clk(clk),
                                                       .enb(enb),
                                                       .din(ramDataIn_1),
                                                       .addr(obj_tracebackUnit_trelDec_count),
                                                       .we(wrEn),
                                                       .dout(tmp_21)
                                                       );

  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_RAMOutReg_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_RAMOutReg <= 64'h0000000000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_RAMOutReg <= tmp_21;
        end
      end
    end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp212
  assign p240tmp_1 = {1'b0, obj_tracebackUnit_trelDec_winningState};
  assign p240tmp_add_temp = p240tmp_1 + 7'b0000001;
  assign p240tmp_2 = {25'b0, p240tmp_add_temp};
  assign p240tmp_sub_temp = p240tmp_2 - 32'sd1;
  assign p240tmp_bit_idx = p240tmp_sub_temp[7:0];
  assign tmp_22 = {obj_tracebackUnit_trelDec_winningState[4:0], obj_tracebackUnit_trelDec_RAMOutReg[p240tmp_bit_idx]};



  assign tmp_23 = (obj_tracebackUnit_trelDec_tracingBack == 1'b0 ? obj_tracebackUnit_trelDec_winningState :
              tmp_22);



  assign tmp_24 = (varargout_6 == 1'b0 ? tmp_23 :
              varargout_5);



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_winningState_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_winningState <= 6'b000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_winningState <= tmp_24;
        end
      end
    end



  assign tmp_25 = obj_tracebackUnit_trelDec_winningState[5] != 1'b0;



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_RAMDataIn_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_RAMDataIn <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_RAMDataIn <= tmp_25;
        end
      end
    end




  genvar t_03;
  generate
    for(t_03 = 32'sd0; t_03 <= 32'sd1; t_03 = t_03 + 32'sd1) begin:trelDecNext_countReg_gen
      assign trelDecNext_countReg[t_03] = 11'b00000000000;
    end
  endgenerate





  genvar t_011;
  generate
    for(t_011 = 32'sd0; t_011 <= 32'sd1; t_011 = t_011 + 32'sd1) begin:trelDecNext_countReg_1_gen
      assign trelDecNext_countReg_1[t_011] = obj_tracebackUnit_trelDec_countReg[t_011];
    end
  endgenerate




  assign trelDecNext_countReg_2[0] = obj_tracebackUnit_trelDec_count;
  assign trelDecNext_countReg_2[1] = obj_tracebackUnit_trelDec_countReg[0];




  genvar t_021;
  generate
    for(t_021 = 32'sd0; t_021 <= 32'sd1; t_021 = t_021 + 32'sd1) begin:obj_tracebackUnit_trelDec_countReg_1_gen
      assign obj_tracebackUnit_trelDec_countReg_1[t_021] = trelDecNext_countReg_2[t_021];
    end
  endgenerate




  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_countReg_reg_process
      if (reset_x == 1'b1) begin
        for(obj_tracebackUnit_trelDec_countReg_reg_t_1 = 32'sd0; obj_tracebackUnit_trelDec_countReg_reg_t_1 <= 32'sd1; obj_tracebackUnit_trelDec_countReg_reg_t_1 = obj_tracebackUnit_trelDec_countReg_reg_t_1 + 32'sd1) begin
          obj_tracebackUnit_trelDec_countReg[obj_tracebackUnit_trelDec_countReg_reg_t_1] <= 11'b00000000000;
        end
      end
      else begin
        if (enb) begin
          for(obj_tracebackUnit_trelDec_countReg_reg_t_0_0 = 32'sd0; obj_tracebackUnit_trelDec_countReg_reg_t_0_0 <= 32'sd1; obj_tracebackUnit_trelDec_countReg_reg_t_0_0 = obj_tracebackUnit_trelDec_countReg_reg_t_0_0 + 32'sd1) begin
            obj_tracebackUnit_trelDec_countReg[obj_tracebackUnit_trelDec_countReg_reg_t_0_0] <= obj_tracebackUnit_trelDec_countReg_1[obj_tracebackUnit_trelDec_countReg_reg_t_0_0];
          end
        end
      end
    end



  assign tracebackCountOut = obj_tracebackUnit_trelDec_countReg[1];



  assign tmp_26 = tracebackCountOut[9:0];



  assign tmp_27 = tracebackCountOut >= 11'b00000101000;



  assign tmp_28 = obj_tracebackUnit_trelDec_stateReg == 3'b011;



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_trellisEnd_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_trellisEnd <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_trellisEnd <= tmp_28;
        end
      end
    end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp88
  assign tmp_29 = tracebackCountOut - 11'b00000101000;



  assign tmp_30 = (obj_tracebackUnit_trelDec_trellisEnd == 1'b0 ? obj_tracebackUnit_msgBuf_tbTrainingStartAddr :
              tmp_29);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_tbTrainingStartAddr_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_tbTrainingStartAddr <= 11'b00000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_tbTrainingStartAddr <= tmp_30;
        end
      end
    end



  assign tmp_31 = tracebackCountOut < obj_tracebackUnit_msgBuf_tbTrainingStartAddr;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp114
  assign guard1 = 1'b1;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp104
  assign guard1_1 = 1'b1;



  assign guard1_2 = 1'b0;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp104
  assign tmp_32 = (tmp_31 == 1'b0 ? guard1 :
              guard1_2);



  assign tmp_33 = (tmp_27 == 1'b0 ? guard1_1 :
              tmp_32);



  assign tmp_34 = tracebackCountOut >= 11'b00000101000;



  assign tmp_35 = tracebackCountOut < obj_tracebackUnit_msgBuf_tbTrainingStartAddr;



  assign tmp_36 = varargout_4 && varargout_2;



  assign tmp_37 = varargout_4 && varargout_2;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp263
  assign msgLocNext_counting = 1'b0;



  assign tmp_38 = varargout_4 && varargout_2;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp267
  assign msgLocNext_inputCount = 11'b00000000000;



  assign tmp_39 = varargout_4 && varargout_2;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp128
  assign msgLocNext_startMsg = 1'b0;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp162
  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp128
  assign tmp_40 = (varargout_4 == 1'b0 ? obj_tracebackUnit_msgLoc_startMsg :
              extEndMsgDelayed);



  assign tmp_41 = (tmp_39 == 1'b0 ? tmp_40 :
              msgLocNext_startMsg);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgLoc_startMsg_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgLoc_startMsg <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgLoc_startMsg <= tmp_41;
        end
      end
    end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp281
  assign msgLocNext_inputCount_1 = 11'b00000000000;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp123
  assign msgLocNext_inputCount_2 = 11'b00000000001;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp277
  assign msgLocNext_counting_1 = 1'b1;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp277
  assign msgLocNext_counting_2 = 1'b0;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp118
  assign msgLocNext_counting_3 = 1'b1;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp281
  assign tmp_42 = obj_tracebackUnit_msgLoc_inputCount + 11'b00000000001;



  assign tmp_43 = (obj_tracebackUnit_msgLoc_inputCount >= 11'b00000101000) && obj_tracebackUnit_msgLoc_startMsg;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp267
  assign tmp_44 = (tmp_43 == 1'b0 ? tmp_42 :
              msgLocNext_inputCount_1);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp150
  assign tmp_45 = (obj_tracebackUnit_msgLoc_counting == 1'b0 ? msgLocNext_inputCount :
              tmp_44);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp123
  assign tmp_46 = (varargout_4 == 1'b0 ? obj_tracebackUnit_msgLoc_inputCount :
              tmp_45);



  assign tmp_47 = (tmp_38 == 1'b0 ? tmp_46 :
              msgLocNext_inputCount_2);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp285
  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp302
  always @(posedge clk)
    begin : obj_tracebackUnit_msgLoc_inputCount_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgLoc_inputCount <= 11'b00000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgLoc_inputCount <= tmp_47;
        end
      end
    end



  assign tmp_48 = (obj_tracebackUnit_msgLoc_inputCount >= 11'b00000101000) && obj_tracebackUnit_msgLoc_startMsg;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp263
  assign tmp_49 = (tmp_48 == 1'b0 ? msgLocNext_counting_1 :
              msgLocNext_counting_2);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp147
  assign tmp_50 = (obj_tracebackUnit_msgLoc_counting == 1'b0 ? msgLocNext_counting :
              tmp_49);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp118
  assign tmp_51 = (varargout_4 == 1'b0 ? obj_tracebackUnit_msgLoc_counting :
              tmp_50);



  assign tmp_52 = (tmp_37 == 1'b0 ? tmp_51 :
              msgLocNext_counting_3);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgLoc_counting_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgLoc_counting <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgLoc_counting <= tmp_52;
        end
      end
    end



  assign tmp_53 = (obj_tracebackUnit_msgLoc_inputCount >= 11'b00000101000) && obj_tracebackUnit_msgLoc_startMsg;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp285
  assign msgLocNext_msgStartAddr = 11'b00000000000;



  assign tmp_54 = (tmp_53 == 1'b0 ? msgLocNext_msgStartAddr :
              obj_tracebackUnit_msgLoc_inputCount);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp133
  assign msgLocNext_msgStartAddr_1 = 11'b00000000000;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp153
  assign tmp_55 = (obj_tracebackUnit_msgLoc_counting == 1'b0 ? obj_tracebackUnit_msgLoc_msgStartAddr :
              tmp_54);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp133
  assign tmp_56 = (varargout_4 == 1'b0 ? obj_tracebackUnit_msgLoc_msgStartAddr :
              tmp_55);



  assign tmp_57 = (tmp_36 == 1'b0 ? tmp_56 :
              msgLocNext_msgStartAddr_1);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgLoc_msgStartAddr_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgLoc_msgStartAddr <= 11'b00000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgLoc_msgStartAddr <= tmp_57;
        end
      end
    end



  assign tmp_58 = tracebackCountOut >= obj_tracebackUnit_msgLoc_msgStartAddr;



  assign tmp_59 = varargout_4 && varargout_2;



  assign tmp_60 = varargout_4 && varargout_2;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp298
  assign msgLocNext_msgLengthAquired = 1'b1;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp305
  assign msgLocNext_msgLengthAquired_1 = 1'b0;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp305
  assign msgLocNext_msgLengthAquired_2 = 1'b1;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp298
  assign tmp_61 = (extEndMsgDelayed == 1'b0 ? msgLocNext_msgLengthAquired_1 :
              msgLocNext_msgLengthAquired_2);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp143
  assign msgLocNext_msgLengthAquired_3 = 1'b0;



  assign tmp_62 =  ! obj_tracebackUnit_msgLoc_msgLengthAquired;



  assign tmp_63 = (tmp_62 == 1'b0 ? msgLocNext_msgLengthAquired :
              tmp_61);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp159
  assign tmp_64 = (obj_tracebackUnit_msgLoc_counting == 1'b0 ? obj_tracebackUnit_msgLoc_msgLengthAquired :
              tmp_63);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp143
  assign tmp_65 = (varargout_4 == 1'b0 ? obj_tracebackUnit_msgLoc_msgLengthAquired :
              tmp_64);



  assign tmp_66 = (tmp_60 == 1'b0 ? tmp_65 :
              msgLocNext_msgLengthAquired_3);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgLoc_msgLengthAquired_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgLoc_msgLengthAquired <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgLoc_msgLengthAquired <= tmp_66;
        end
      end
    end



  assign tmp_67 =  ! obj_tracebackUnit_msgLoc_msgLengthAquired;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp302
  assign msgLocNext_msgLengthMinus1 = 11'b00000000000;



  assign tmp_68 = (extEndMsgDelayed == 1'b0 ? msgLocNext_msgLengthMinus1 :
              obj_tracebackUnit_msgLoc_inputCount);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp138
  assign msgLocNext_msgLengthMinus1_1 = 11'b00000000000;



  assign tmp_69 = (tmp_67 == 1'b0 ? obj_tracebackUnit_msgLoc_msgLengthMinus1 :
              tmp_68);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp156
  assign tmp_70 = (obj_tracebackUnit_msgLoc_counting == 1'b0 ? obj_tracebackUnit_msgLoc_msgLengthMinus1 :
              tmp_69);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp138
  assign tmp_71 = (varargout_4 == 1'b0 ? obj_tracebackUnit_msgLoc_msgLengthMinus1 :
              tmp_70);



  assign tmp_72 = (tmp_59 == 1'b0 ? tmp_71 :
              msgLocNext_msgLengthMinus1_1);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgLoc_msgLengthMinus1_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgLoc_msgLengthMinus1 <= 11'b00000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgLoc_msgLengthMinus1 <= tmp_72;
        end
      end
    end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp92
  assign p165tmp_1 = {1'b0, obj_tracebackUnit_msgLoc_msgLengthMinus1};
  assign p165tmp_add_temp = p165tmp_1 + 12'b000000000001;
  assign p165tmp_2 = {2'b0, obj_tracebackUnit_msgLoc_msgStartAddr};
  assign p165tmp_3 = {1'b0, p165tmp_add_temp};
  assign p165tmp_sub_temp = p165tmp_2 - p165tmp_3;
  assign tmp_73 = p165tmp_sub_temp[10:0];



  assign tmp_74 = (obj_tracebackUnit_trelDec_trellisEnd == 1'b0 ? obj_tracebackUnit_msgBuf_sliceB_offset :
              tmp_73);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_sliceB_offset_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_sliceB_offset <= 11'b00000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_sliceB_offset <= tmp_74;
        end
      end
    end



  assign p180tmp_1 = {1'b0, tracebackCountOut};
  assign p180tmp_2 = {1'b0, obj_tracebackUnit_msgBuf_sliceB_offset};
  assign p180tmp_sub_temp = p180tmp_1 - p180tmp_2;
  assign tmp_75 = p180tmp_sub_temp[9:0];



  assign p172tmp_1 = {1'b0, tracebackCountOut};
  assign p172tmp_2 = {1'b0, obj_tracebackUnit_msgLoc_msgStartAddr};
  assign p172tmp_sub_temp = p172tmp_1 - p172tmp_2;
  assign tmp_76 = p172tmp_sub_temp[9:0];



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp108
  assign tmp_77 = (tmp_58 == 1'b0 ? tmp_75 :
              tmp_76);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp94
  assign tmp_78 = tracebackCountOut[9:0];



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp98
  assign tmp_79 = (tmp_35 == 1'b0 ? obj_tracebackUnit_msgBuf_RAMWrAddr :
              tmp_77);



  assign tmp_80 = (tmp_34 == 1'b0 ? obj_tracebackUnit_msgBuf_RAMWrAddr :
              tmp_79);



  assign tmp_81 = (tmp_33 == 1'b0 ? tmp_80 :
              tmp_78);



  assign tmp_82 = (obj_tracebackUnit_trelDec_tracingBack == 1'b0 ? tmp_26 :
              tmp_81);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_RAMWrAddr_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_RAMWrAddr <= 10'b0000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_RAMWrAddr <= tmp_82;
        end
      end
    end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp81
  assign msgBufNext_RAMWr = 1'b0;



  assign tmp_83 = tracebackCountOut >= 11'b00000101000;



  assign tmp_84 = tracebackCountOut < obj_tracebackUnit_msgBuf_tbTrainingStartAddr;



  assign tmp_85 = tracebackCountOut >= obj_tracebackUnit_msgLoc_msgStartAddr;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp168
  assign msgBufNext_RAMWr_1 = 1'b1;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp168
  assign msgBufNext_RAMWr_2 = 1'b1;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp111
  assign tmp_86 = (tmp_85 == 1'b0 ? msgBufNext_RAMWr_1 :
              msgBufNext_RAMWr_2);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp96
  assign msgBufNext_RAMWr_3 = 1'b0;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp101
  assign tmp_87 = (tmp_84 == 1'b0 ? obj_tracebackUnit_msgBuf_RAMWr :
              tmp_86);



  assign tmp_88 = (tmp_83 == 1'b0 ? obj_tracebackUnit_msgBuf_RAMWr :
              tmp_87);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp81
  assign tmp_89 = (tmp_33 == 1'b0 ? tmp_88 :
              msgBufNext_RAMWr_3);



  assign tmp_90 = (obj_tracebackUnit_trelDec_tracingBack == 1'b0 ? msgBufNext_RAMWr :
              tmp_89);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_RAMWr_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_RAMWr <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_RAMWr <= tmp_90;
        end
      end
    end



  assign tmp_91 = (obj_tracebackUnit_trelDec_stateReg == 3'b001) && (trelDecNext_countReg_1[0] == 11'b00000000000);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp187
  assign out = 1'b0;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp187
  assign out_1 = 1'b1;



  assign tmp_92 = (tmp_91 == 1'b0 ? out :
              out_1);



  always @(posedge clk)
    begin : obj_tracebackUnit_trelDec_trellisStart_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_trelDec_trellisStart <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_trelDec_trellisStart <= tmp_92;
        end
      end
    end



  assign tmp_93 = obj_tracebackUnit_trelDec_tracingBack && (tracebackCountOut == 11'b00000101000);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp73
  assign out_2 = 1'b0;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp73
  assign out_3 = 1'b1;



  assign tmp_94 = (tmp_93 == 1'b0 ? out_2 :
              out_3);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_lastWrite_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_lastWrite <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_lastWrite <= tmp_94;
        end
      end
    end



  assign tmp_95 = 2'b00;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp54
  assign msgBufNext_state = 2'b01;



  // HDL code generation from MATLAB function: SystemCore_stepImpl
  assign tmp_96 = 10'b0000000000;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp59
  assign msgBufNext_RAMRdAddr = 10'b0000000000;



  assign tmp_97 = obj_tracebackUnit_msgBuf_RAMRdAddr + 10'b0000000001;



  assign tmp_98 = obj_tracebackUnit_msgBuf_RAMRdAddr + 10'b0000000001;



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp66
  always @(obj_tracebackUnit_msgBuf_RAMRdAddr, obj_tracebackUnit_msgBuf_lastWrite,
       obj_tracebackUnit_msgBuf_state,
       obj_tracebackUnit_msgLoc_msgLengthMinus1) begin
    p1_tmp = 2'b00;
    p1_tmp_0 = 2'b00;
    p1_t_0 = 12'b000000000000;
    p1_t_1 = 12'b000000000000;
    case ( obj_tracebackUnit_msgBuf_state)
      2'b01 :
        begin
          if (obj_tracebackUnit_msgBuf_lastWrite) begin
            p1_tmp = 2'b10;
          end
          else begin
            p1_tmp = 2'b01;
          end
          p1_tmp_1 = p1_tmp;
        end
      2'b10 :
        begin
          p1_t_0 = {2'b0, obj_tracebackUnit_msgBuf_RAMRdAddr};
          p1_t_1 = {1'b0, obj_tracebackUnit_msgLoc_msgLengthMinus1};
          if (p1_t_0 == (p1_t_1 - 12'b000000000001)) begin
            p1_tmp_0 = 2'b00;
          end
          else begin
            p1_tmp_0 = 2'b10;
          end
          p1_tmp_1 = p1_tmp_0;
        end
      default :
        begin
          p1_tmp_1 = 2'b00;
        end
    endcase
    tmp_99 = p1_tmp_1;
  end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp54
  assign tmp_100 = (obj_tracebackUnit_trelDec_trellisStart == 1'b0 ? tmp_99 :
              tmp_95);



  assign tmp_101 = (obj_tracebackUnit_trelDec_trellisStart == 1'b0 ? tmp_100 :
              msgBufNext_state);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_state_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_state <= 2'b00;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_state <= tmp_101;
        end
      end
    end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp69
  always @(obj_tracebackUnit_msgBuf_RAMRdAddr, obj_tracebackUnit_msgBuf_state,
       obj_tracebackUnit_msgLoc_msgLengthMinus1, tmp_97, tmp_98) begin
    p1_tmp1 = 10'b0000000000;
    p1_t_01 = 12'b000000000000;
    p1_t_11 = 12'b000000000000;
    case ( obj_tracebackUnit_msgBuf_state)
      2'b01 :
        begin
          p1_tmp_01 = 10'b0000000000;
        end
      2'b10 :
        begin
          p1_t_01 = {2'b0, obj_tracebackUnit_msgBuf_RAMRdAddr};
          p1_t_11 = {1'b0, obj_tracebackUnit_msgLoc_msgLengthMinus1};
          if (p1_t_01 == (p1_t_11 - 12'b000000000001)) begin
            p1_tmp1 = tmp_98;
          end
          else begin
            p1_tmp1 = tmp_97;
          end
          p1_tmp_01 = p1_tmp1;
        end
      default :
        begin
          p1_tmp_01 = 10'b0000000000;
        end
    endcase
    tmp_102 = p1_tmp_01;
  end



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp59
  assign tmp_103 = (obj_tracebackUnit_trelDec_trellisStart == 1'b0 ? tmp_102 :
              tmp_96);



  assign tmp_104 = (obj_tracebackUnit_trelDec_trellisStart == 1'b0 ? tmp_103 :
              msgBufNext_RAMRdAddr);



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_RAMRdAddr_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_RAMRdAddr <= 10'b0000000000;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_RAMRdAddr <= tmp_104;
        end
      end
    end



  SimpleDualPortRAM_singlebit #(.AddrWidth(10),
                                .DataWidth(1)
                                )
                              u_simpleDualPortRam_singlebit (.clk(clk),
                                                             .enb(enb),
                                                             .wr_din(obj_tracebackUnit_msgBuf_RAMDataIn),  // ufix1
                                                             .wr_addr(obj_tracebackUnit_msgBuf_RAMWrAddr),
                                                             .wr_en(obj_tracebackUnit_msgBuf_RAMWr),
                                                             .rd_addr(obj_tracebackUnit_msgBuf_RAMRdAddr),
                                                             .dout(a)  // ufix1
                                                             );

  assign tmp_105 = a != 1'b0;



  always @(posedge clk)
    begin : obj_tracebackUnit_dataOut_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_dataOut <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_dataOut <= tmp_105;
        end
      end
    end



  assign varargout_1 = obj_tracebackUnit_dataOut;

  assign msgBufNext_RAMCtrlOut = {3{1'b0}};



  assign msgBufNext_FSMCtrlOut = {3{1'b0}};



  assign msgBufNext_FSMCtrlOut_1 = {3{1'b0}};



  assign msgBufNext_FSMCtrlOut_2 = {3{1'b0}};



  assign msgBufNext_FSMCtrlOut_3 = {3{1'b0}};



  assign msgBufNext_FSMCtrlOut_4 = {3{1'b0}};



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp63
  always @(obj_tracebackUnit_msgBuf_RAMRdAddr, obj_tracebackUnit_msgBuf_lastWrite,
       obj_tracebackUnit_msgBuf_state,
       obj_tracebackUnit_msgLoc_msgLengthMinus1) begin
    p1_t_3[0] = 1'b1;
    p1_t_3[1] = 1'b0;
    p1_t_3[2] = 1'b1;
    p1_t_4[0] = 1'b0;
    p1_t_4[1] = 1'b0;
    p1_t_4[2] = 1'b1;
    p1_t_5[0] = 1'b0;
    p1_t_5[1] = 1'b1;
    p1_t_5[2] = 1'b1;
    p1_t_6 = 12'b000000000000;
    p1_t_7 = 12'b000000000000;
    case ( obj_tracebackUnit_msgBuf_state)
      2'b01 :
        begin
          if (obj_tracebackUnit_msgBuf_lastWrite) begin
            for(p1_t_02 = 32'sd0; p1_t_02 <= 32'sd2; p1_t_02 = p1_t_02 + 32'sd1) begin
              p1_msgBufNext_FSMCtrlOut[p1_t_02] = p1_t_3[p1_t_02];
            end
          end
          else begin
            p1_msgBufNext_FSMCtrlOut = {3{1'b0}};
          end
        end
      2'b10 :
        begin
          p1_t_6 = {2'b0, obj_tracebackUnit_msgBuf_RAMRdAddr};
          p1_t_7 = {1'b0, obj_tracebackUnit_msgLoc_msgLengthMinus1};
          if (p1_t_6 == (p1_t_7 - 12'b000000000001)) begin
            for(p1_t_2 = 32'sd0; p1_t_2 <= 32'sd2; p1_t_2 = p1_t_2 + 32'sd1) begin
              p1_msgBufNext_FSMCtrlOut[p1_t_2] = p1_t_5[p1_t_2];
            end
          end
          else begin
            for(p1_t_12 = 32'sd0; p1_t_12 <= 32'sd2; p1_t_12 = p1_t_12 + 32'sd1) begin
              p1_msgBufNext_FSMCtrlOut[p1_t_12] = p1_t_4[p1_t_12];
            end
          end
        end
      default :
        begin
          p1_msgBufNext_FSMCtrlOut = {3{1'b0}};
        end
    endcase
    tmp_106 = p1_msgBufNext_FSMCtrlOut;
  end



  assign tmp_107 = {3{1'b0}};



  assign tmp_108 = (obj_tracebackUnit_trelDec_trellisStart == 1'b0 ? tmp_106 :
              tmp_107);



  // HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp49
  assign msgBufNext_FSMCtrlOut_5[0] = tmp_108[0];
  assign msgBufNext_FSMCtrlOut_5[1] = tmp_108[1];
  assign msgBufNext_FSMCtrlOut_5[2] = tmp_108[2];

  assign msgBufNext_FSMCtrlOut_6 = {3{1'b0}};



  // HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp49
  assign msgBufNext_FSMCtrlOut_7 = {3{1'b0}};



  assign tmp_109 = (obj_tracebackUnit_trelDec_trellisStart == 1'b0 ? msgBufNext_FSMCtrlOut_5 :
              msgBufNext_FSMCtrlOut_7);



  assign obj_tracebackUnit_msgBuf_FSMCtrlOut_1 = tmp_109;



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_FSMCtrlOut_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_FSMCtrlOut <= {3{1'b0}};
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_FSMCtrlOut <= obj_tracebackUnit_msgBuf_FSMCtrlOut_1;
        end
      end
    end



  assign msgBufNext_RAMCtrlOut_1 = obj_tracebackUnit_msgBuf_FSMCtrlOut;



  assign obj_tracebackUnit_msgBuf_RAMCtrlOut_1 = msgBufNext_RAMCtrlOut_1;



  always @(posedge clk)
    begin : obj_tracebackUnit_msgBuf_RAMCtrlOut_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_msgBuf_RAMCtrlOut <= {3{1'b0}};
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_msgBuf_RAMCtrlOut <= obj_tracebackUnit_msgBuf_RAMCtrlOut_1;
        end
      end
    end



  assign tmp_110 = obj_tracebackUnit_msgBuf_RAMCtrlOut[0];



  always @(posedge clk)
    begin : obj_tracebackUnit_startOut_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_startOut <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_startOut <= tmp_110;
        end
      end
    end



  assign tmp_111 = obj_tracebackUnit_msgBuf_RAMCtrlOut[1];



  always @(posedge clk)
    begin : obj_tracebackUnit_endOut_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_endOut <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_endOut <= tmp_111;
        end
      end
    end



  assign tmp_112 = obj_tracebackUnit_msgBuf_RAMCtrlOut[2];



  always @(posedge clk)
    begin : obj_tracebackUnit_validOut_reg_process
      if (reset_x == 1'b1) begin
        obj_tracebackUnit_validOut <= 1'b0;
      end
      else begin
        if (enb) begin
          obj_tracebackUnit_validOut <= tmp_112;
        end
      end
    end



  assign varargout_2_1 = obj_tracebackUnit_startOut;

  assign varargout_3_1 = obj_tracebackUnit_endOut;

  assign varargout_4_1 = obj_tracebackUnit_validOut;

endmodule  // ConvolutionalDecoderTracebackUnit

